--In the domain of retail analytics, understanding customer behavior is crucial for driving business growth and enhancing customer satisfaction. 
--One essential aspect is identifying customers who have purchased all available products, 
--as they exhibit strong engagement with the product offerings and represent potential loyal customers.
--Write an SQL to identify customers who have bought all the products available in products table along with total revenue generated by them. 
--Sort the output by total_revenue in decreasing order.
-----------------------
CREATE TABLE products_64 (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    unit_price DECIMAL(10, 2)
);
INSERT INTO products_64 (product_id, product_name, unit_price) VALUES
(101, 'Product A', 150.00),
(102, 'Product B', 200.00),
(103, 'Product C', 250.00);
--------------------------------------
CREATE TABLE customers_64 (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50)
);
INSERT INTO customers_64 (customer_id, customer_name) VALUES
(1, 'John Doe'),
(2, 'Jane Smith'),
(3, 'Alice Johnson'),
(4, 'Somnath');
-----------------------------------
CREATE TABLE orders_64 (
    order_id INT PRIMARY KEY,
    customer_id INT,
    product_id INT,
    quantity INT,
    order_date DATE
);
INSERT INTO orders_64 (order_id, customer_id, product_id, quantity, order_date) VALUES
(1, 1, 101, 1, '2024-01-01'),
(2, 1, 102, 1, '2024-01-02'),
(3, 2, 101, 3, '2024-01-03'),
(4, 2, 102, 2, '2024-01-04'),
(5, 3, 103, 1, '2024-01-05'),
(6, 3, 101, 2, '2024-01-06'),
(7, 3, 102, 1, '2024-01-07'),
(8, 1, 102, 1, '2024-01-08'),
(9, 3, 103, 2, '2024-01-09'),
(10, 4, 102, 1, '2024-01-07'),
(11, 4, 101, 3, '2024-01-08'),
(12, 4, 103, 2, '2024-01-09');

------------------------------------------
SELECT * FROM products_64;
SELECT * FROM customers_64;
SELECT * FROM orders_64;

SELECT c.customer_name, SUM(o.quantity * p.unit_price) AS total_revenue
FROM orders_64 o
INNER JOIN customers_64 c ON o.customer_id = c.customer_id
INNER JOIN products_64 p ON o.product_id = p.product_id
GROUP BY c.customer_name
HAVING COUNT(DISTINCT o.product_id) = (SELECT COUNT(*) FROM products_64)
ORDER BY total_revenue DESC
